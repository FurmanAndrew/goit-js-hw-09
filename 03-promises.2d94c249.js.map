{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,qBAAqBN,QAAeC,OAE9CM,EAAO,oBAAoBP,QAAeC,MAAU,GACnDA,EAAM,G,CAMb,MAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BX,MAAOU,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,yBAGjCH,EAAKC,KAAKK,iBAAiB,UAE3B,SAAoCC,GAClCA,EAAEC,iBACF,IAAIC,EAAqBC,OAAOV,EAAKR,MAAMmB,OACvCC,EAAqBF,OAAOV,EAAKI,KAAKO,OACtCE,EAAsBH,OAAOV,EAAKK,OAAOM,OACzCG,EAAgB,GAChBC,EAAcN,EAElB,IAAK,IAAIO,EAAI,EAAGA,GAAKH,EAAqBG,GAAK,EAAG,CAEhD,MAAMC,EAAU3B,EAAc0B,EAAGD,GAAaG,MAAKC,IACjDC,QAAQC,IAAIF,EAAQ,IACnBG,OAAMC,IACPH,QAAQC,IAAIE,EAAM,IAEpBT,EAAcU,KAAKP,GACnBF,GAAeH,C","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`Rejected promise ${position} in ${delay}ms`);\n    }, delay)\n  })\n}\n  \n\n\nconst refs = {\n  form: document.querySelector('form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', submitFormForCreatePromise);\n\nfunction submitFormForCreatePromise(e) {\n  e.preventDefault();\n  let NumberFirstPromise = Number(refs.delay.value);\n  let NumberNextPromises = Number(refs.step.value);\n  let NumberAmountPromise = Number(refs.amount.value);\n  let arrayPromises = [];\n  let currentTime = NumberFirstPromise;\n\n  for (let i = 1; i <= NumberAmountPromise; i += 1) {\n    \n    const promise = createPromise(i, currentTime).then(success => {\n      console.log(success);\n    }).catch(error => {\n      console.log(error);\n    })\n    arrayPromises.push(promise);\n    currentTime += NumberNextPromises;\n  }\n}"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$refs","form","document","querySelector","step","amount","addEventListener","e","preventDefault","NumberFirstPromise","Number","value","NumberNextPromises","NumberAmountPromise","arrayPromises","currentTime","i","promise","then","success","console","log","catch","error","push"],"version":3,"file":"03-promises.2d94c249.js.map"}